package cdpgen

import (
	"fmt"
	"strings"
)

func generateDoc(d Domain, v Version) string {
	b := new(strings.Builder)
	fmt.Fprintf(b, "// Package %s provides Go bindings for the `%s` domain\n",
		strings.ToLower(d.Domain), d.Domain)
	fmt.Fprintf(b, "// (%s/%s)\n", cdpURL, d.Domain)
	fmt.Fprintf(b, "// in the Chrome DevTools Protocol (CDP), version %s.%s.\n",
		v.Major, v.Minor)

	if d.Description != nil {
		fmt.Fprintln(b, "//")
		for _, l := range strings.Split(*d.Description, "\n") {
			l = strings.ReplaceAll(l, "<p>", "\n//\n// ")
			l = strings.ReplaceAll(l, "</p>", "")
			fmt.Fprintf(b, "// %s\n", l)
		}
	}
	if d.Experimental {
		fmt.Fprintln(b, "//\n// This domain is experimental!")
	}
	// https://golang.org/s/generatedcode
	fmt.Fprintf(b, "//\n// Code generated by %s - DO NOT EDIT.\n", genURL)
	fmt.Fprintf(b, "package %s\n", strings.ToLower(d.Domain))

	return b.String()
}
